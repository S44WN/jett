/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/models/cloud/model.glb 
*/

import React from "react";
import { useGLTF } from "@react-three/drei";

export function Cloud({ opacity, ...props }) {
  const { nodes, materials } = useGLTF("./models/cloud/model.glb");

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Node.geometry}>
        <meshStandardMaterial
          {...materials["lambert2SG.001"]}
          transparent
          opacity={opacity}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/cloud/model.glb");

// const nextPoint =
// linePoints[(Math.min(currentPointIndex + 1), linePoints.length - 1)];

// const xDisplacement =
// (nextPoint.x - currentPoint.x) *
// (scroll.offset * linePoints.length - currentPointIndex);

// const angleRotation =
// (xDisplacement < 0 ? 1 : -1) *
// Math.min(Math.abs(xDisplacement), Math.PI / 3);
